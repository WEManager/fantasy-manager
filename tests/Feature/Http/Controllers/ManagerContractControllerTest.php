<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\ManagerContractController
 */
class ManagerContractControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function create_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $manager_contract = factory(\App\ManagerContract::class)->create();
        $club = factory(\App\Club::class)->create();
        $user = factory(\App\User::class)->create();

        $response = $this->actingAs($user)->get(route('apply_for_job', ['locale' => $manager_contract->locale, $club]));

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function quit_job_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $manager_contract = factory(\App\ManagerContract::class)->create();
        $club = factory(\App\Club::class)->create();
        $user = factory(\App\User::class)->create();

        $response = $this->actingAs($user)->get(route('quit_job', ['locale' => $manager_contract->locale, $club]));

        $response->assertOk();
        $response->assertViewIs('manager-contracts.quit');
        $response->assertViewHas('club');
        $response->assertViewHas('boardMessage');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $manager_contract = factory(\App\ManagerContract::class)->create();

        $response = $this->post(route('send_job_application', ['locale' => $manager_contract->locale]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(withErrors([__(':Club already has a manager.', ['Club' => $club->name])]));

        // TODO: perform additional assertions
    }

    // test cases...
}
