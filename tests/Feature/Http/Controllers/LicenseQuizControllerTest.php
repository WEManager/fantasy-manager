<?php

namespace Tests\Feature\Http\Controllers;

use App\User;
use Tests\TestCase;
use Illuminate\Foundation\Testing\RefreshDatabase;

/**
 * @see \App\Http\Controllers\LicenseQuizController
 */
class LicenseQuizControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function show_returns_an_ok_response()
    {
        $user = factory(User::class)->create();
        $license_quiz = factory(\App\LicenseQuiz::class)->create();

        $response = $this->get(route('license_test', ['locale' => 'en', 'licenseQuiz' => $license_quiz->id]));

        // Since we are not logged in
        $response->assertStatus(302);

        $loggedInResponse = $this->actingAs($user)->get(route('license_test', ['locale' => 'en', 'licenseQuiz' => $license_quiz->id]));
        $loggedInResponse->assertStatus(200);
        $loggedInResponse->assertSee($license_quiz->name);
    }

    /**
     * @test
     */
    public function submission_returns_an_ok_response()
    {
        //$this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = factory(User::class)->create();
        $license_quiz = factory(\App\LicenseQuiz::class)->create();

        $response = $this->post(route('license_test_validation', ['locale' => 'en', 'licenseQuiz' => $license_quiz->id]), []);
        $response->assertStatus(302);

        $post = $this->actingAs($user)->post(route('license_test_validation', ['locale' => 'en', 'licenseQuiz' => $license_quiz->id]), []);

        $updatedUser = User::find($user->id);
        $this->assertTrue($updatedUser->level === 1);
    }

    // test cases...
}
