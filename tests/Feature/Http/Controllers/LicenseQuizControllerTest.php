<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\LicenseQuizController
 */
class LicenseQuizControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function show_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $license_quiz = factory(\App\LicenseQuiz::class)->create();
        $license_quiz = factory(\App\LicenseQuiz::class)->create();

        $response = $this->get(route('license_test', ['locale' => $license_quiz->locale, 'licenseQuiz' => $license_quiz->licenseQuiz]));

        $response->assertOk();
        $response->assertViewIs();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function submission_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $license_quiz = factory(\App\LicenseQuiz::class)->create();
        $license_quiz = factory(\App\LicenseQuiz::class)->create();

        $response = $this->post(route('license_test_validation', ['locale' => $license_quiz->locale, 'licenseQuiz' => $license_quiz->licenseQuiz]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(link_route('apply_for_job', ['club' => $club]));

        // TODO: perform additional assertions
    }

    // test cases...
}
